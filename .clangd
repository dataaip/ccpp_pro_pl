# 主配置部分（全局设置）
# 这些设置适用于所有文件，除非被条件块覆盖

# 诊断设置
Diagnostics:
  ClangTidy:
    Enabled: true        # 启用 Clang-Tidy
    Config: .clang-tidy  # 使用项目中的 .clang-tidy 文件
    Add:                 # 添加的检查组
      - bugprone-*       # 常见错误模式检查
      - clang-analyzer-* # Clang 静态分析器
      - cppcoreguidelines-* # C++ 核心指南
      - google-*         # Google 风格指南
      - modernize-*      # 现代化改造建议
      - performance-*    # 性能相关检查
      - portability-*    # 可移植性问题
      - readability-*    # 可读性改进
    Remove:              # 排除的特定检查
      - google-build-using-namespace        # 允许 using namespace
      - modernize-use-trailing-return-type  # 允许传统返回类型
    MemoryLimit: 4096    # 内存限制 4GB
    ParallelThreads: 2   # 使用 2 个线程

# 代码格式化
Format:
  Style: file            # 使用项目中的 .clang-format
  FallbackStyle: LLVM    # 后备风格为 LLVM

# 编译器标志
CompileFlags:
  CompilationDatabase: build  # 从 build 目录获取编译命令
  Add:                        # 添加额外标志
    - -Wall                   # 所有警告
    - -Wextra                 # 额外警告
    - -I${projectRoot}/include # 添加包含路径

# 代码补全
Completion:
  AllScopes: true          # 搜索所有作用域
  Style: bundled           # 使用内置补全风格
  InsertIncludes: true     # 自动插入头文件
  IncludeDecorators: true  # 智能选择引号/尖括号

# 预编译头（提升性能）
Preamble:
  Storage: memory          # 内存中存储预编译头
  Cache:                   # 缓存设置
    Path: .cache/clangd/pch # 缓存路径
    Size: 1024             # 缓存大小 1GB
  UpdatePolicy: Background # 后台更新

# 索引设置
Index:
  Background: Build        # 后台构建索引
  BackgroundThreads: 2     # 2 个索引线程
  BackgroundMemory: 2048   # 索引内存限制 2GB

# 内联提示
InlayHints:
  FunctionParameterPlaceholders: false # 禁用参数占位符
  Enabled: true  # 启用参数名提示等辅助功能
  TypeNames: true
  Designators: true

# 重构选项
Refactor:
  RenameIncludeComments: true # 重命名时更新注释中的名称

# 测试文件特殊配置
If: 
  PathMatch: ".*_test\\.(cpp|h)$"  # 匹配测试文件
Then: 
  Diagnostics:
    ClangTidy:
      Remove: [performance-*]  # 移除性能检查（测试中不相关）